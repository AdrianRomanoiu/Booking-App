import React, { memo, useState, useCallback } from 'react';
const Button = memo((props) => {
    const [loading, changeLoading] = useState(false);
    const onClickHandler = useCallback((event) => {
        const promise = props.onClick(event);
        if (promise) {
            changeLoading(true);
            promise.then(() => changeLoading(false));
        }
    }, [props.onClick]);
    return (React.createElement("button", { type: props.type || 'button', disabled: props.disabled || loading, className: props.className, onClick: onClickHandler }, props.children));
});
export default Button;
//# sourceMappingURL=index.js.map